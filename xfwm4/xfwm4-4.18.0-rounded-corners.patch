diff --git a/src/frame.c b/src/frame.c
index 279baeecb..24fcfa70e 100644
--- a/src/frame.c
+++ b/src/frame.c
@@ -62,8 +62,9 @@ frameBorderTop (Client * c)
 
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
-        && FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-        && (c->screen_info->params->borderless_maximize))
+        && (!FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
+            || !(c->screen_info->params->borderless_maximize))
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return frameDecorationBorderTop (c->screen_info);
     }
@@ -76,8 +77,9 @@ frameTopLeftWidth (Client * c, int state)
     g_return_val_if_fail (c != NULL, 0);
     TRACE ("client \"%s\" (0x%lx)", c->name, c->window);
 
-    if (FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-        && c->screen_info->params->borderless_maximize)
+    if (((FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
+        &&  c->screen_info->params->borderless_maximize))
+        || !c->screen_info->params->rounded_corners_keep_decorations)
     {
         return 0;
     }
@@ -91,8 +93,9 @@ frameTopRightWidth (Client * c, int state)
     g_return_val_if_fail (c != NULL, 0);
     TRACE ("client \"%s\" (0x%lx)", c->name, c->window);
 
-    if (FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-        && c->screen_info->params->borderless_maximize)
+    if (((FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
+        &&  c->screen_info->params->borderless_maximize))
+        || !c->screen_info->params->rounded_corners_keep_decorations)
     {
         return 0;
     }
@@ -455,6 +458,72 @@ getLetterFromButton (int i, Client * c)
     return chr;
 }
 
+
+static void
+frameRoundCorners (Client * c)
+{
+    ScreenInfo *screen_info = c->screen_info;
+    DisplayInfo *display_info = screen_info->display_info;
+    XWindowAttributes win_attr;
+    int width;
+    int height;
+    int rad;
+    int dia;
+    Pixmap mask;
+    XGCValues xgcv;
+    GC shape_gc;
+
+
+    rad = screen_info->params->rounded_corners_radius;
+    if (!rad || c->type == WINDOW_DOCK || c->type == WINDOW_DESKTOP
+        || FLAG_TEST_ALL (c->flags, CLIENT_FLAG_FULLSCREEN)
+        || (FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
+            && !screen_info->params->rounded_corners_maximized))
+    {
+        return;
+    }
+
+    XGetWindowAttributes (display_info->dpy, screen_info->shape_win, &win_attr);
+    if (!XGetWindowAttributes (display_info->dpy, screen_info->shape_win, &win_attr))
+    {
+        return;
+    }
+
+    width = win_attr.border_width * 2 + win_attr.width;
+    height = win_attr.border_width * 2 + win_attr.height;
+    dia = 2 * rad;
+    if (dia > width || dia > height)
+    {
+        return;
+    }
+
+    mask = XCreatePixmap (display_info->dpy, screen_info->shape_win, width, height, 1);
+    if (!mask)
+    {
+        return;
+    }
+
+    shape_gc = XCreateGC (display_info->dpy, mask, 0, &xgcv);
+    if (!shape_gc)
+    {
+        XFreePixmap (display_info->dpy, mask);
+        return;
+    }
+
+    XSetForeground (display_info->dpy, shape_gc, 0);
+    XFillRectangle (display_info->dpy, mask, shape_gc, 0, 0, width, height);
+    XSetForeground (display_info->dpy, shape_gc, 1);
+    XFillArc (display_info->dpy, mask, shape_gc, 0, 0, dia, dia, 0, 23040);
+    XFillArc (display_info->dpy, mask, shape_gc, width-dia-1, 0, dia, dia, 0, 23040);
+    XFillArc (display_info->dpy, mask, shape_gc, 0, height-dia-1, dia, dia, 0, 23040);
+    XFillArc (display_info->dpy, mask, shape_gc, width-dia-1, height-dia-1, dia, dia, 0, 23040);
+    XFillRectangle (display_info->dpy, mask, shape_gc, rad, 0, width-dia, height);
+    XFillRectangle (display_info->dpy, mask, shape_gc, 0, rad, width, height-dia);
+    XShapeCombineMask (display_info->dpy, screen_info->shape_win, ShapeBounding, 0, 0, mask, ShapeSet);
+    XFreePixmap (display_info->dpy, mask);
+    XFreeGC (display_info->dpy, shape_gc);
+}
+
 static void
 frameSetShape (Client * c, int state, FramePixmap * frame_pix, int button_x[BUTTON_COUNT])
 {
@@ -501,6 +570,12 @@ frameSetShape (Client * c, int state, FramePixmap * frame_pix, int button_x[BUTT
         rect.width  = c->width;
         rect.height = c->height;
         XShapeCombineRectangles (display_info->dpy, screen_info->shape_win, ShapeBounding, 0, 0, &rect, 1, ShapeSet, Unsorted);
+
+        // Add for rounded corners
+        if (!frame_pix)
+        {
+            frameRoundCorners (c);
+        }
     }
     else
     {
@@ -696,6 +771,9 @@ frameSetShape (Client * c, int state, FramePixmap * frame_pix, int button_x[BUTT
                                     MYWINDOW_XWINDOW (c->buttons[i]), ShapeBounding, ShapeUnion);
             }
         }
+
+        // Rounded corners
+        frameRoundCorners (c);
     }
     rect.x = 0;
     rect.y = 0;
@@ -917,8 +995,9 @@ frameDrawWin (Client * c)
                 &screen_info->corners[CORNER_BOTTOM_RIGHT][state]);
         }
 
-        if (FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
+        if ((FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
             && (c->screen_info->params->borderless_maximize))
+            || !c->screen_info->params->rounded_corners_keep_decorations)
         {
             xfwmWindowHide (&c->sides[SIDE_LEFT]);
             xfwmWindowHide (&c->sides[SIDE_RIGHT]);
@@ -1113,7 +1192,8 @@ frameLeft (Client * c)
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
         && (!FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-            || !(c->screen_info->params->borderless_maximize)))
+            || !(c->screen_info->params->borderless_maximize))
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->screen_info->sides[SIDE_LEFT][ACTIVE].width;
     }
@@ -1129,7 +1209,8 @@ frameRight (Client * c)
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
         && (!FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-            || !(c->screen_info->params->borderless_maximize)))
+            || !(c->screen_info->params->borderless_maximize))
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->screen_info->sides[SIDE_RIGHT][ACTIVE].width;
     }
@@ -1142,7 +1223,7 @@ frameTop (Client * c)
     g_return_val_if_fail (c != NULL, 0);
     TRACE ("client \"%s\" (0x%lx)", c->name, c->window);
 
-    if (CLIENT_HAS_FRAME (c))
+    if (CLIENT_HAS_FRAME (c) && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return frameDecorationTop(c->screen_info) - frameBorderTop (c);
     }
@@ -1174,7 +1255,8 @@ frameX (Client * c)
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
         && (!FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-            || !(c->screen_info->params->borderless_maximize)))
+            || !(c->screen_info->params->borderless_maximize))
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->x - frameLeft (c);
     }
@@ -1188,7 +1270,8 @@ frameY (Client * c)
     TRACE ("client \"%s\" (0x%lx)", c->name, c->window);
 
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
-         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN))
+         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
+         && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->y - frameTop (c);
     }
@@ -1204,7 +1287,8 @@ frameWidth (Client * c)
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
         && (!FLAG_TEST_ALL (c->flags, CLIENT_FLAG_MAXIMIZED)
-            || !(c->screen_info->params->borderless_maximize)))
+            || !(c->screen_info->params->borderless_maximize))
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->width + frameLeft (c) + frameRight (c);
     }
@@ -1219,12 +1303,14 @@ frameHeight (Client * c)
 
     if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
         && FLAG_TEST (c->flags, CLIENT_FLAG_SHADED)
-        && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN))
+        && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
+        && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return frameTop (c) + frameBottom (c);
     }
     else if (FLAG_TEST (c->xfwm_flags, XFWM_FLAG_HAS_BORDER)
-             && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN))
+             && !FLAG_TEST (c->flags, CLIENT_FLAG_FULLSCREEN)
+             && c->screen_info->params->rounded_corners_keep_decorations)
     {
         return c->height + frameTop (c) + frameBottom (c);
     }
diff --git a/src/settings.c b/src/settings.c
index 8fa35cde5..477cd28ad 100644
--- a/src/settings.c
+++ b/src/settings.c
@@ -749,9 +749,19 @@ loadSettings (ScreenInfo *screen_info)
         {"wrap_workspaces", NULL, G_TYPE_BOOLEAN, TRUE},
         {"zoom_desktop", NULL, G_TYPE_BOOLEAN, TRUE},
         {"zoom_pointer", NULL, G_TYPE_BOOLEAN, TRUE},
+
+        // Also add settings for rounded window corners
+        {"rounded_corners_radius", NULL, G_TYPE_INT, TRUE},
+        {"rounded_corners_maximized", NULL, G_TYPE_BOOLEAN, TRUE},
+        {"rounded_corners_keep_decorations", NULL, G_TYPE_BOOLEAN, TRUE},
         {NULL, NULL, G_TYPE_INVALID, FALSE}
     };
 
+    // Set initial values of rounded window corner settings
+    setIntValue ("rounded_corner_radius", 8, rc);
+    setBooleanValue ("rounded_corner_maximized", FALSE, rc);
+    setBooleanValue ("rounded_corners_keep_decorations", TRUE, rc);
+
     TRACE ("entering");
 
     loadRcData (screen_info, rc);
@@ -919,6 +929,11 @@ loadSettings (ScreenInfo *screen_info)
         compositorSetVblankMode (screen_info, compositorParseVblankMode (value));
     }
 
+    // Also load settings for rounded window corners
+    screen_info->params->rounded_corners_radius = getIntValue ("rounded_corners_radius", rc);
+    screen_info->params->rounded_corners_maximized = getBoolValue ("rounded_corners_maximized", rc);
+    screen_info->params->rounded_corners_keep_decorations = getBoolValue ("rounded_corners_keep_decorations", rc);
+
     freeRc (rc);
     return TRUE;
 }
@@ -1238,6 +1253,14 @@ cb_xfwm4_channel_property_changed(XfconfChannel *channel, const gchar *property_
                 {
                     screen_info->params->cycle_tabwin_mode = CLAMP (g_value_get_int(value), 0, 1);
                 }
+
+                // Add in conditionals for rounded window corners
+                else if (!strcmp (name, "rounded_corners_radius"))
+                {
+                    screen_info->params->rounded_corners_radius = CLAMP (g_value_get_int(value), 0, 100);
+                    reloadScreenSettings (screen_info, UPDATE_ALL);
+                }
+
                 else if ((!strcmp (name, "button_offset"))
                       || (!strcmp (name, "button_spacing"))
                       || (!strcmp (name, "double_click_time"))
@@ -1432,6 +1455,19 @@ cb_xfwm4_channel_property_changed(XfconfChannel *channel, const gchar *property_
                 {
                     screen_info->params->wrap_cycle = g_value_get_boolean (value);
                 }
+
+                // Also add conditionals for rounded window corners
+                else if (!strcmp (name, "rounded_corners_maximized"))
+                {
+                    screen_info->params->rounded_corners_maximized = g_value_get_boolean (value);
+                    reloadScreenSettings (screen_info, UPDATE_MAXIMIZE);
+                }
+                else if (!strcmp (name, "rounded_corners_keep_decorations"))
+                {
+                    screen_info->params->rounded_corners_keep_decorations = g_value_get_boolean (value);
+                    reloadScreenSettings (screen_info, UPDATE_ALL);
+                }
+
                 else if ((!strcmp (name, "full_width_title"))
                       || (!strcmp (name, "show_app_icon")))
                 {
diff --git a/src/settings.h b/src/settings.h
index 612ee2e8a..91f90a957 100644
--- a/src/settings.h
+++ b/src/settings.h
@@ -252,6 +252,11 @@ struct _XfwmParams
     gboolean wrap_workspaces;
     gboolean zoom_desktop;
     gboolean zoom_pointer;
+
+    // Add parameters for rounded window corners
+    int rounded_corners_radius;
+    gboolean rounded_corners_maximized;
+    gboolean rounded_corners_keep_decorations;
 };
 
 gboolean                 loadSettings                           (ScreenInfo *);
